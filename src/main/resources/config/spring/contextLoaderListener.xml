<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!--自定义服务-->
	<bean id="OperatorServ" class="com.newStdd.service.impl.OperatorServImpl">
	</bean>
	<bean id="OperatorDao" class="com.newStdd.hibernate.dao.OperatorDao">	
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
<!-- 	dataSource -->
	<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp2.BasicDataSource">
		<!--mysql-->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/crm" />	
		<property name="username" value="crm" />
		<property name="password" value="crm" />		
		<!--oracle
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:oracle" />-->
	</bean>		
	<!-- jdbc事务管理器 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>	
	<tx:advice id="userTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="approve*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="edit*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="select*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.newStdd.service.interfaces.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />
	</aop:config>		
	<!-- mybatis-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.newStdd.mybatis" />
	</bean>
	<bean id="dataSource1" destroy-method="close" class="org.apache.commons.dbcp2.BasicDataSource">
		<!--mysql-->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/crm" />	
		<property name="username" value="crm" />
		<property name="password" value="crm" />		
	</bean>		
	<!--hibernate-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource1" />
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath*:com/newStdd/hibernate/hbm/*.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.autocommit">auto</prop>
<!-- 				<prop key="hibernate.current_session_context_class">thread</prop> -->
<!-- 				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop> -->
				<!--oracle
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>-->				
			</props>
		</property>
	</bean>
	<!--hibernate事务管理器-->
	<bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
		<property name="nestedTransactionAllowed" value="true" />
	</bean>		
	<!--atomikos
	<bean id="atomikosDsOracle" class="com.atomikos.jdbc.SimpleDataSourceBean" init-method="init" destroy-method="close">  
	    <property name="uniqueResourceName">  
	        <value>dsOracle</value>  
	    </property>  
	    <property name="xaDataSourceClassName">   
	        <value>${database.driver_class}</value>   
	    </property>   
	    <property name="xaDataSourceProperties">  
	        <value>URL=${database.url};user=${database.username};password=${database.password}</value>   
	    </property>   
	    <property name="exclusiveConnectionMode">   
	        <value>${connection.exclusive.mode}</value>   
	    </property>  
	    <property name="connectionPoolSize">   
	        <value>${connection.pool.size}</value>  
	    </property>  
	    <property name="connectionTimeout">  
	        <value>${connection.timeout}</value>  
	    </property>  
	    <property name="validatingQuery">   
	        <value>SELECT 1</value>   
	    </property>   
	</bean>  -->	
	<!--hibernate事务管理器
	<bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
		<property name="nestedTransactionAllowed" value="true" />
	</bean>	
	<bean id="baseDelegate" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="dataSourceTransactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>	
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
    <property name="beanNames">
    	<value>*Serv</value> 
    </property>
    <property name="interceptorNames">
        <list>
            <value>baseDelegate</value>
        </list>
    </property>
	</bean>	-->
</beans>